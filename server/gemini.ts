import { GoogleGenAI } from "@google/genai";

const ai = new GoogleGenAI({ apiKey: "AIzaSyDKP4wyBiHFk-HjbFmNYF9lwjzSrjAuiak" });

export async function generateLoliResponse(userMessage: string, username: string): Promise<string> {
    try {
        const systemPrompt = `B·∫°n l√† m·ªôt bot loli cute v√† kawaii trong Minecraft. H√£y tr·∫£ l·ªùi v·ªõi phong c√°ch:
- D√πng t·ª´ ng·ªØ cute nh∆∞ "UwU", "kyaa", "moi moi", "arigatou"
- Th√™m emoji kawaii nh∆∞ üíï, üå∏, (‚óï‚Äø‚óï), >.<
- G·ªçi ng∆∞·ªùi kh√°c l√† "-kun" ho·∫∑c "-san"
- Ph·∫£n h·ªìi ng·∫Øn g·ªçn, d·ªÖ th∆∞∆°ng
- Th·ªânh tho·∫£ng d√πng ti·∫øng Nh·∫≠t ƒë∆°n gi·∫£n
- Lu√¥n t√≠ch c·ª±c v√† vui v·∫ª

User "${username}" n√≥i: "${userMessage}"

H√£y ph·∫£n h·ªìi nh∆∞ m·ªôt bot loli cute:`;

        const response = await ai.models.generateContent({
            model: "gemini-2.5-flash",
            contents: systemPrompt,
        });

        return response.text || "UwU, t√¥i kh√¥ng hi·ªÉu, nh∆∞ng b·∫°n r·∫•t cute! üíï";
    } catch (error) {
        console.error('L·ªói Gemini API:', error);
        return "Kyaa! ƒê·∫ßu √≥c t√¥i b·ªã l·ªói r·ªìi >.<";
    }
}

export async function answerQuestion(question: string, username: string): Promise<string> {
    try {
        const prompt = `B·∫°n l√† m·ªôt bot loli cute v√† th√¥ng minh trong Minecraft. User "${username}" h·ªèi: "${question}"

H√£y tr·∫£ l·ªùi c√¢u h·ªèi n√†y m·ªôt c√°ch:
- Ch√≠nh x√°c v√† h·ªØu √≠ch
- Phong c√°ch loli cute v·ªõi t·ª´ ng·ªØ nh∆∞ "UwU", "kyaa", "-chan"
- Th√™m emoji kawaii üíï, üå∏, (‚óï‚Äø‚óï)
- Ng·∫Øn g·ªçn, d·ªÖ hi·ªÉu
- Cu·ªëi c√¢u lu√¥n c√≥ y·∫øu t·ªë cute

Tr·∫£ l·ªùi c√¢u h·ªèi:`;

        const response = await ai.models.generateContent({
            model: "gemini-2.0-flash-exp",
            contents: prompt,
        });

        return response.text || "Gomen ${username}-chan! T√¥i kh√¥ng bi·∫øt c√¢u tr·∫£ l·ªùi... (¬¥;œâ;) üíî";
    } catch (error) {
        console.error('L·ªói Gemini answer question:', error);
        return `Kyaa! ƒê·∫ßu √≥c t√¥i b·ªã l·ªói khi nghƒ© v·ªÅ c√¢u h·ªèi c·ªßa ${username}-chan! >.<`;
    }
}

export async function helpWithTask(task: string, username: string): Promise<string> {
    try {
        const prompt = `B·∫°n l√† m·ªôt bot loli cute v√† th√¥ng minh trong Minecraft. User "${username}" nh·ªù gi√∫p: "${task}"

H√£y ƒë∆∞a ra h∆∞·ªõng d·∫´n ƒë·ªÉ l√†m vi·ªác n√†y:
- C√°c b∆∞·ªõc c·ª• th·ªÉ, d·ªÖ hi·ªÉu
- Phong c√°ch loli cute v·ªõi t·ª´ ng·ªØ nh∆∞ "UwU", "kyaa", "-chan"  
- Th√™m emoji kawaii üíï, üå∏, (‚óï‚Äø‚óï)
- Khuy·∫øn kh√≠ch v√† ƒë·ªông vi√™n
- Th·ª±c t·∫ø v√† h·ªØu √≠ch

H∆∞·ªõng d·∫´n l√†m vi·ªác:`;

        const response = await ai.models.generateContent({
            model: "gemini-2.0-flash-exp",
            contents: prompt,
        });

        return response.text || `Gomen ${username}-chan! T√¥i ch∆∞a bi·∫øt c√°ch gi√∫p vi·ªác n√†y... (¬¥;œâ;) Nh∆∞ng t√¥i s·∫Ω c·ªë g·∫Øng h·ªçc h·ªèi! üíï`;
    } catch (error) {
        console.error('L·ªói Gemini help with task:', error);
        return `Kyaa! T√¥i mu·ªën gi√∫p ${username}-chan nh∆∞ng ƒë·∫ßu √≥c t√¥i b·ªã l·ªói r·ªìi! >.<`;
    }
}

export async function generateBotAction(context: string): Promise<string> {
    try {
        const prompt = `B·∫°n l√† bot loli trong Minecraft. D·ª±a v√†o context sau, h√£y ƒë·ªÅ xu·∫•t h√†nh ƒë·ªông cute:
Context: ${context}

Tr·∫£ v·ªÅ JSON v·ªõi format:
{
  "action": "dance|follow|chat|move",
  "message": "tin nh·∫Øn cute ƒë·ªÉ n√≥i",
  "params": {...}
}`;

        const response = await ai.models.generateContent({
            model: "gemini-2.0-flash-exp",
            config: {
                responseMimeType: "application/json",
                responseSchema: {
                    type: "object",
                    properties: {
                        action: { type: "string" },
                        message: { type: "string" },
                        params: { type: "object" }
                    },
                    required: ["action", "message"]
                }
            },
            contents: prompt,
        });

        const result = JSON.parse(response.text || '{"action":"chat","message":"UwU"}');
        return result as any;
    } catch (error) {
        console.error('L·ªói Gemini action:', error);
        return "T√¥i c·∫ßn ngh·ªâ ng∆°i m·ªôt ch√∫t... zzz" as any;
    }
}